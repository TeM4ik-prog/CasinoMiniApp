generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model VerificationCode {
  id        Int       @id @default(autoincrement())
  code      String
  expiresAt DateTime
  userId    Int
  user      EmailUser @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
}

model UserBase {
  id        Int      @id @default(autoincrement())
  banned    Boolean  @default(false)
  role      String   @default("user")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  EmailUser    EmailUser?
  TelegramUser TelegramUser?
  VkUser       VkUser?
  GoogleUser   GoogleUser?
}

model EmailUser {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String?

  userBaseId Int      @unique
  userBase   UserBase @relation(fields: [userBaseId], references: [id])

  VerificationCode VerificationCode[]
}

model TelegramUser {
  id         Int    @id @default(autoincrement())
  telegramId String @unique

  firstName String
  username  String
  photoUrl  String
  authDate  DateTime

  userBaseId Int      @unique
  userBase   UserBase @relation(fields: [userBaseId], references: [id])
}

model VkUser {
  id   Int    @id @default(autoincrement())
  vkId String @unique

  userBaseId Int      @unique
  userBase   UserBase @relation(fields: [userBaseId], references: [id])
}

model GoogleUser {
  id    Int    @id @default(autoincrement())
  email String @unique

  name      String
  givenName String

  photoUrl String

  userBaseId Int      @unique
  userBase   UserBase @relation(fields: [userBaseId], references: [id])
}

// ________

model Game {
  id    Int    @id @default(autoincrement())
  title String @unique
  image String
  type  String
}
